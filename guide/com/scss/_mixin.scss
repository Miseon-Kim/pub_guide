// ir
@mixin ir-reset($width, $height) {
    position:absolute !important; 
    overflow:hidden !important; 
    height:$height !important; 
    width:$width !important; 
    margin:0 !important; 
    padding:0 !important;
    line-height:0 !important;
    border:0;
}
@mixin ir($ir){
    @if ($ir == "hide") {
        @include ir-reset(1px,1px);
        clip:rect(1px 1px 1px 1px); 
    } @else if($ir == "blind") {
        @include ir-reset(0,0);
        display:block !important; 
        font-size:1px !important; 
        z-index:-1;
    } @else if($ir == "screen") {
        @include ir-reset(0,0);
        font-size:1px; text-indent:-9999px;
    } 
}

@mixin clearfix {
    &:after {
        content: "";
        display: block;
        clear: both;
        height:0;
    }
}
@mixin eff-direction($direction) {
    @if ($direction == left){
        left:0;
        @content;
    } @else if ($direction == right){
        right:0;
        @content;
    } @else if ($direction == center){
        left:50%;
        transform:translateX(-50%);
        @content;
    }
}

@mixin el-content($el-type) {
    @if ($el-type == "after") {
        &::after {
            content: "";
            display: block;
            @content;
        }
    } @else if ($el-type == "before") {
        &::before {
            content: "";
            display: block;
            @content;
        }
    } @else if ($el-type == "both") {
        &::before {
            content: "";
            display: block;
            @content;
        }
        &::after {
            content: "";
            display: block;
            @content;
        }
    }
}

// effect
@mixin transition($time, $el, $effect) {
    transition:$time $el $effect;
    @content;
}

@mixin line-effect($color, $el-type, $direction) {
    backface-visibility:hidden;
	position:relative;
    // transition:0.5s color ease;
	text-decoration:none;
	color:$color;

    @if ($el-type == "after") {
        &::after {
            @include el-content("after");
            backface-visibility:hidden;
            position:absolute;
            @include eff-direction($direction);
            @content;
        }
    } @else if ($el-type == "before") {
        &::before {
            @include el-content("before");
            backface-visibility:hidden;
            position:absolute;
            @include eff-direction($direction);
            @content;
        }
    }
}
// width, height
@mixin width ($width:100%) {
    width:$width;
    @content;
}

@mixin height ($height:100%){
    height:$height;
    @content;
}

@mixin el-size ($width, $height) {
    width:$width; height:$height;
    @content;
}
@mixin fullHeight ($height:100vh)  {
    @include height;
    height:$height;
    min-height: $height;
}

// align, position, display, float
@mixin align($type, $offset) {
    @if ($type == "text") {
        text-align:$offset !important;
    } @else if($type == "valign") {
        vertical-align:$offset !important;
    }
}

@mixin auto-center-align($pos) {
    position: $pos;
    top: 50%;
    left: 50%;
    transform: translate( -50%, -50%);
}

@mixin auto-offset-align($top, $left) {
    top: $top;
    left: $left;
    transform: translate( -$top, -$left);
}

@mixin auto-vertical-align {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    @content;
}

@mixin auto-horizontal-align($pos) {
    position: $pos;
    left: 50%;
    transform: translateX(-50%);
    @content;
}

@mixin pos($type) {position:$type; @content;}
@mixin pos-offset-l($top, $left) {position:absolute; top:$top; left:$left; @content;}
@mixin pos-offset-r($top, $right) {position:absolute; top:$top; right:$right; @content;}
@mixin pos-offset-b($bottom, $left) {position:absolute; bottom:$bottom; left:$left; @content;}
@mixin float($type) {float:$type;}
@mixin flex($direction:row, $wrap:nowrap, $j-content:flex-start, $al-items:center) {
    flex-direction:$direction; // row, row-reverse, column, column-reverse
    flex-wrap:$wrap; // nowrap, wrap, wrap-reverse
    justify-content:$j-content; // flex-start, flex-end, center, space-around, space-between, space-evenly
    align-items:$al-items; // stretch, flex-start, flex-end, center
    // align-content:$al-content; // flex-start, flex-end, center, space-around, space-between, space-evenly
    @content;
}

@mixin flexgrow($grow, $shrink, $basis){
    flex-grow:$grow; flex-shrink:$shrink; flex-basis:$basis;
    @content;
}

@mixin flexbox($grow, $shrink, $size){
    flex:$grow $shrink $size;
    @content;
    // $grow :0일 경우 여분의 공간을 차지 하지 않음. 1일 경우 여분의 공간을 차지함
    // $shring : 0일 경우 화면 비율이 변경되도 공간이 줄지 않음. 숫자가 커질수록 공간이 더 많이 줄어듬
    // $size : flex가 적용된 요소의 기본크기를 지정함
}
@mixin display($type) {display:$type; @content;}

// font
@mixin webfont ($fontName, $fontweight) {
    font : {
        family: $fontName;
        weight: $fontweight;
    }
    @content;
}

@mixin fontSize ($size) {
    @if ($size== "xxs") {
        font-size: .9rem;
    } @else if($size== "xs") {
        font-size: 1.2rem;
    } @else if($size== "s") {
        font-size: 1.3rem;
    } @else if($size== "base") {
        font-size: 1.4rem; // default size
    } @else if($size== "md") {
        font-size: 1.6rem;
    } @else if($size== "lg") {
        font-size: 1.8rem;
    } @else if($size== "xl") {
        font-size: 2rem;
    } @else if($size== "xxl") {
        font-size: 2.2rem;
    } @else if($size== "xxxl") {
        font-size: 2.4rem;
    } @else {
        font-size:$size;
    }
    @content;
}

// overflow
@mixin overflow ($offset, $overflow) {
    @if ($offset== x) {
        // overflow:hidden;
        overflow-x:$overflow;
    } @else if ($offset== y) {
        // overflow:hidden;
        overflow-y:$overflow;
    } @else if ($offset== both) {
        overflow:$overflow;
    }
}

// btn
@mixin btn-v($vertical) {
    height: $vertical+ rem;
    line-height: ($vertical - 0.1)+ rem;
}

@mixin btnSize($size, $pad1, $pad2) {
    padding:$pad1+rem $pad2+rem;
    @if ($size == "xs"){
        @include fontSize("xxs");
    } @else if ($size == "s"){
        @include fontSize("xs");
    } @else if ($size == "md"){
        @include fontSize("base");
    } @else if ($size == "lg"){
        @include fontSize("md");
    } @else if ($size == "xl"){
        @include fontSize("lg");
    }
}

@mixin btn($type) {
    border-radius:.3rem;
    &:not(.disabled):not([disabled]):not([aria-disabled="disabled"]):focus {box-shadow:0 0 0 0.1rem rgba(0, 0, 0, .1), 0 2px 5px 0.2rem rgba(0, 0, 0, .15);}

    &[aria-disabled="disabled"], &[disabled], &.disabled {
        opacity: .5; cursor:not-allowed;
        &:hover, &:focus {opacity: .5; box-shadow: none;}
    }
    @if ($type == "line") {
        border:1px $color-gray1 solid;
        color:$color-gray1;
        background:$color-white;
        &:not(.disabled):not([disabled]):not([aria-disabled="disabled"]):hover {            
            background:$color-gray3;
            color:$color-white;
            @include transition(.2s, all, ease-in-out);
            @content;
        }
        &:not(.disabled):not([disabled]):not([aria-disabled="disabled"]):focus, &.is-active {
            background:$color-gray3; border-color:$color-gray4;
            color:$color-white;
            @include transition(.2s, all, ease-in-out);
            @content;
        }
        &[aria-disabled="disabled"], &[disabled], &.disabled {
            opacity: .5;
            background:$color-white; border-color:$color-gray1;
            color:$color-gray1;
        }
        @content;
    } @else if ($type == "bg"){ 
        border:1px $color-gray2 solid;       
        background:$color-gray2;
        color:$color-white;
        &:not(.disabled):not([disabled]):not([aria-disabled="disabled"]):hover {            
            background:$color-gray4; border-color:$color-gray4;
            color:$color-gray1;
            @include transition(.2s, all, ease-in-out);
            @content;
        }
        &:not(.disabled):not([disabled]):not([aria-disabled="disabled"]):focus, &.is-active {
            background:$color-gray4; border-color:$color-gray4;
            color:$color-gray1;
            @include transition(.2s, all, ease-in-out);
            @content;
        }
        &[aria-disabled="disabled"], &[disabled], &.disabled {
            opacity: .5;
            color:$color-gray7;
        }
        @content;
    }
}

@mixin tooltip-arrow($direction, $offest1, $offest2, $translate1, $translate2) {
    @include pos(absolute);
    border:.3rem solid transparent;    

    @if($direction == top){
        transform: translate($translate1, $translate2);
        bottom:$offest1; left:$offest2;
        border-top: .4rem solid $color-gray5;
        border-bottom:none;

    } @else if($direction == bottom){
        transform: translate($translate1, $translate2);
        top:$offest1; left:$offest2;
        border-bottom: .4rem solid $color-gray5;
        border-top:none;
    } @else if($direction == left){
        transform: translate($translate1, $translate2);
        top:$offest1; right:$offest2;
        border-left: .4rem solid $color-gray5;
        border-right:none;
    } @else if($direction == right){
        transform: translate($translate1, $translate2);
        top:$offest1; left:$offest2;
        border-right: .4rem solid $color-gray5;
        border-left:none;
    }
}

// fontawesome ICO
@mixin fontICO ($direction, $cont) {

    @if($direction == before){
        @include el-content("before"){
            @include display(inline-block);
            @include align(vertical, middle);
            content:$cont;
            @include webfont('iconFont', 900);
            @content;
        }

    } @else if($direction == after){
        @include el-content("after"){
            @include display(inline-block);
            @include align(vertical, middle);
            content:$cont;
            @include webfont('iconFont', 900);
            margin-left:.5rem;
            @content;
        }
    }

    
    // f059
}

// gradient
@mixin bg-gradient($type, $angle, $color1, $color2){
    @if ($type == line) {
        background:linear-gradient($angle, $color1, $color2);
        @content;
    } @else if ($type == circle) {
        background:radial-gradient(circle, $color1, $color2);
        @content;
    }
    
}

//icoSet
@mixin icoSet($width, $height, $mgLeft, $bgL, $bgT) {
    content:""; 
    display: inline-block; 
    width: $width; 
    height: $height; 
    margin-left: $mgLeft; 
    background-image:url(/votenet/resources/m/com/img/icoSet.png);
    background-repeat: no-repeat;
    background-position: $bgL $bgT;
    vertical-align: middle; 
}

//text ellipsis
@mixin ellipsis($line: 1, $height) {
    %txtOverflow {
        overflow: hidden;
        text-overflow: ellipsis;
        -o-text-overflow:ellipsis;-moz-binding:url(ellipsis.xml#ellipsis);
    }

    @if ($line == 1) {
        @extend %txtOverflow; white-space: nowrap;
        height:$height;
    } @else {
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: $line;
        @extend %txtOverflow;
        height:$height;
    }
}

@mixin split($col, $space) {
    width:calc(100%/$col - ($space * ($col - 1)));
}

/* function */
//font size 2배수
@function size($size) {
    @return $size / 2 / $font-size#{rem};
}

// SVG ICON
@function svgIcon($iconName, $color:fff) {
    $iconList: (
    // Guide Search BTN
    btnPgSearch: "%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 513.749 513.749'%3E%3Cpath fill='%23#{$color}' d='M504.352,459.061l-99.435-99.477c74.402-99.427,54.115-240.344-45.312-314.746S119.261-9.277,44.859,90.15 S-9.256,330.494,90.171,404.896c79.868,59.766,189.565,59.766,269.434,0l99.477,99.477c12.501,12.501,32.769,12.501,45.269,0 c12.501-12.501,12.501-32.769,0-45.269L504.352,459.061z M225.717,385.696c-88.366,0-160-71.634-160-160s71.634-160,160-160 s160,71.634,160,160C385.623,314.022,314.044,385.602,225.717,385.696z'/%3E%3C/svg%3E",

    btnPgSearchDark:"%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1' id='Capa_1' x='0px' y='0px' viewBox='0 0 513.749 513.749' style='enable-background:new 0 0 513.749 513.749;' xml:space='preserve' width='512' height='512'%3E%3Cpath fill='%23#{$color}' d='M504.352,459.061l-99.435-99.477c74.402-99.427,54.115-240.344-45.312-314.746S119.261-9.277,44.859,90.15 S-9.256,330.494,90.171,404.896c79.868,59.766,189.565,59.766,269.434,0l99.477,99.477c12.501,12.501,32.769,12.501,45.269,0 c12.501-12.501,12.501-32.769,0-45.269L504.352,459.061z M225.717,385.696c-88.366,0-160-71.634-160-160s71.634-160,160-160 s160,71.634,160,160C385.623,314.022,314.044,385.602,225.717,385.696z'/%3E%3C/svg%3E",

    currentAfter: "%3Csvg xmlns='http://www.w3.org/2000/svg' id='Outline' viewBox='0 0 24 24'%3E%3Cpath fill='%23#{$color}' d='M6.41,16H17.59a1,1,0,0,0,.7-1.71L12.71,8.71a1,1,0,0,0-1.42,0L5.71,14.29A1,1,0,0,0,6.41,16Z'/%3E%3C/svg%3E",

    btn_guide_top: "%3Csvg xmlns='http://www.w3.org/2000/svg' id='Outline' viewBox='0 0 24 24'%3E%3Cpath fill='%23#{$color}' d='M6.41,16H17.59a1,1,0,0,0,.7-1.71L12.71,8.71a1,1,0,0,0-1.42,0L5.71,14.29A1,1,0,0,0,6.41,16Z'/%3E%3C/svg%3E",

    btn_search_cancel:"%3Csvg xmlns='http://www.w3.org/2000/svg' id='Outline' viewBox='0 0 24 24' width='512' height='512'%3E%3Cpath fill='%23#{$color}' d='M16,8a1,1,0,0,0-1.414,0L12,10.586,9.414,8A1,1,0,0,0,8,9.414L10.586,12,8,14.586A1,1,0,0,0,9.414,16L12,13.414,14.586,16A1,1,0,0,0,16,14.586L13.414,12,16,9.414A1,1,0,0,0,16,8Z'/%3E%3Cpath fill='%23#{$color}' d='M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm0,22A10,10,0,1,1,22,12,10.011,10.011,0,0,1,12,22Z'/%3E%3C/svg%3E%0A",

    pgAlert_btnActive:"%3Csvg xmlns='http://www.w3.org/2000/svg' id='Outline' viewBox='0 0 24 24' width='512' height='512'%3E%3Cpath fill='%23#{$color}' d='M16,8a1,1,0,0,0-1.414,0L12,10.586,9.414,8A1,1,0,0,0,8,9.414L10.586,12,8,14.586A1,1,0,0,0,9.414,16L12,13.414,14.586,16A1,1,0,0,0,16,14.586L13.414,12,16,9.414A1,1,0,0,0,16,8Z'/%3E%3Cpath fill='%23#{$color}' d='M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm0,22A10,10,0,1,1,22,12,10.011,10.011,0,0,1,12,22Z'/%3E%3C/svg%3E%0A",

    btn_hover:"%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 50 50' enable-background='new 0 0 50 50'%3E%3Cpath d='M 12 6 C 10.3 6 9 7.3 9 9 L 9 39 L 11 37 L 11 9 C 11 8.4 11.4 8 12 8 L 38 8 C 38.6 8 39 8.4 39 9 L 39 41 C 39 41.6 38.6 42 38 42 L 16 42 L 14 44 L 38 44 C 39.7 44 41 42.7 41 41 L 41 9 C 41 7.3 39.7 6 38 6 L 12 6 z M 16 25 L 16 27 L 24.59375 27 L 9.09375 42.5 L 10.5 43.90625 L 26 28.40625 L 26 37 L 28 37 L 28 26 L 28 25 L 27 25 L 16 25 z' fill='%23#{$color}' /%3E%3C/svg%3E%0A",
    fd_newWindow:"%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 50 50' enable-background='new 0 0 50 50'%3E%3Cpath fill='%23#{$color}' d='M 7 7 C 5.3 7 4 8.3 4 10 L 4 38 L 6 36 L 6 15 L 44 15 L 44 40 C 44 40.6 43.6 41 43 41 L 11 41 L 9 43 L 43 43 C 44.7 43 46 41.7 46 40 L 46 10 C 46 8.3 44.7 7 43 7 L 7 7 z M 7 9 L 43 9 C 43.6 9 44 9.4 44 10 L 44 13 L 6 13 L 6 10 C 6 9.4 6.4 9 7 9 z M 8 10 C 7.4477153 10 7 10.447715 7 11 C 7 11.552285 7.4477153 12 8 12 C 8.5522847 12 9 11.552285 9 11 C 9 10.447715 8.5522847 10 8 10 z M 11 10 C 10.447715 10 10 10.447715 10 11 C 10 11.552285 10.447715 12 11 12 C 11.552285 12 12 11.552285 12 11 C 12 10.447715 11.552285 10 11 10 z M 14 10 C 13.447715 10 13 10.447715 13 11 C 13 11.552285 13.447715 12 14 12 C 14.552285 12 15 11.552285 15 11 C 15 10.447715 14.552285 10 14 10 z M 11 24 L 11 26 L 19.59375 26 L 4.09375 41.5 L 5.5 42.90625 L 21 27.40625 L 21 36 L 23 36 L 23 25 L 23 24 L 22 24 L 11 24 z' /%3E%3C/svg%3E%0A",
    fd_disconnect:"%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 50 50' enable-background='new 0 0 50 50'%3E%3Cpath d='M 12 6 C 10.3 6 9 7.3 9 9 L 9 39 L 11 37 L 11 9 C 11 8.4 11.4 8 12 8 L 38 8 C 38.6 8 39 8.4 39 9 L 39 41 C 39 41.6 38.6 42 38 42 L 16 42 L 14 44 L 38 44 C 39.7 44 41 42.7 41 41 L 41 9 C 41 7.3 39.7 6 38 6 L 12 6 z M 16 25 L 16 27 L 24.59375 27 L 9.09375 42.5 L 10.5 43.90625 L 26 28.40625 L 26 37 L 28 37 L 28 26 L 28 25 L 27 25 L 16 25 z' fill='%23#{$color}' /%3E%3C/svg%3E%0A"
    );
    $svgIcon: map-get($iconList, $iconName);
    @return url("data:image/svg+xml;charset=utf8,#{$svgIcon}");
    //background-image: svgIcon(btnPgSearch);
}

// px to rem
@function rem($pixels){
    @return $pixels / $font_size + rem;
}

//iOS - for notch
@function cons($directon) {
    @return constant(safe-area-inset-#{$directon});
}
@function safe($directon) {
    @return env(safe-area-inset-#{$directon});
}
@function consm($directon) {
    @return constant(safe-area-inset-#{$directon}) - 0.625rem;
}
@function safem($directon) {
    @return env(safe-area-inset-#{$directon}) - 0.625rem;
}